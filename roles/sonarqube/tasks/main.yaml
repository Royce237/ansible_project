---
- name: Ensure system requirements are met
  block:
    - name: Set fs.file-max
      sysctl:
        name: fs.file-max
        value: "{{ sonarqube_fs_file_max }}"
        state: present
        reload: yes
      become: yes

    - name: Increase max map count for Elasticsearch
      sysctl:
        name: vm.max_map_count
        value: "{{ sonarqube_max_map_count }}"
        state: present
        reload: yes
      become: yes

    - name: Add limits configuration for sonarqube
      copy:
        dest: /etc/security/limits.d/99-sonarqube.conf
        content: |
          sonarqube   -   nofile   65536
          sonarqube   -   nproc    4096
        mode: '0644'
      become: yes

    - name: Create sonarqube group
      group:
        name: sonarqube
        gid: "{{ sonarqube_group_id }}"
        state: present
      become: yes

    - name: Create sonarqube user
      user:
        name: sonarqube
        uid: "{{ sonarqube_user_id }}"
        group: sonarqube
        state: present
      become: yes

    - name: Create required directories
      file:
        path: "{{ item }}"
        state: directory
        owner: "{{ sonarqube_user_id }}"
        group: "{{ sonarqube_group_id }}"
        mode: '0755'
      with_items:
        - "{{ sonarqube_data_dir }}"
        - "{{ sonarqube_extensions_dir }}"
        - "{{ sonarqube_logs_dir }}"
        - "{{ sonarqube_temp_dir }}"
        - "{{ postgres_data_dir }}"
      become: yes

- name: Create Docker network
  docker_network:
    name: "{{ docker_network_name }}"
    state: present

- name: Deploy PostgreSQL container
  docker_container:
    name: sonarqube-db
    image: "postgres:{{ postgres_version }}"
    state: started
    restart_policy: unless-stopped
    networks:
      - name: "{{ docker_network_name }}"
    volumes:
      - "{{ postgres_data_dir }}:/var/lib/postgresql/data"
    env:
      POSTGRES_PASSWORD: "{{ postgres_password }}"
      POSTGRES_USER: "{{ postgres_user }}"
      POSTGRES_DB: "{{ postgres_db }}"
    ports:
      - "{{ postgres_port }}:5432"

- name: Deploy SonarQube container
  docker_container:
    name: sonarqube
    image: "sonarqube:{{ sonarqube_version }}"
    state: started
    restart_policy: unless-stopped
    user: "{{ sonarqube_user_id }}:{{ sonarqube_group_id }}"
    networks:
      - name: "{{ docker_network_name }}"
    volumes:
      - "{{ sonarqube_data_dir }}:/opt/sonarqube/data"
      - "{{ sonarqube_extensions_dir }}:/opt/sonarqube/extensions"
      - "{{ sonarqube_logs_dir }}:/opt/sonarqube/logs"
      - "{{ sonarqube_temp_dir }}:/opt/sonarqube/temp"
    env:
      SONAR_JDBC_URL: "jdbc:postgresql://sonarqube-db:5432/{{ postgres_db }}"
      SONAR_JDBC_USERNAME: "{{ postgres_user }}"
      SONAR_JDBC_PASSWORD: "{{ postgres_password }}"
      SONAR_ES_BOOTSTRAP_CHECKS_DISABLE: "true"
    ports:
      - "{{ sonarqube_port }}:9000"
    ulimits:
      - "nofile:65536:65536"
      - "nproc:4096:4096"
    memory: "4g"
    memory_reservation: "3g"